DESCRIZIONE DELL'ALGORITMO:
L'algoritmo si caratterizza delle funzioni: Ordinamento, che inserisce un nodo all'interno dell'albero mediante la funzione di TreeInsert, che valuta la corretta posizione per inserire il nodo, per poi utilizzare la funzione di Visualizzazione che esplora prima il sottoalbero sinistro, poi la radice e poi il sottoalbero destro, secondo la modalit√† di visualizzazione richiesta dall'esercizio.

CODICE PYTHON:

class TreeNode:
    def __init__(self, valore):
        self.valore = valore
        self.right = None
        self.left = None


def Visualizzazione(radice):
    if radice:
        Visualizzazione(radice.left)
        print(radice.valore, end = ' ')
        Visualizzazione(radice.right)
    

def TreeInsert(radice, valore):

    if radice is None:
        radice = TreeNode(valore)
    else:
        if valore <= radice.valore:
            radice.left = TreeInsert(radice.left, valore)
            
        else:
            radice.right = TreeInsert(radice.right, valore)
    
    return radice
    
        

def Ordinamento(array):
    if not array:
        return
      
    radice = None
    for valore in array:
        radice = TreeInsert(radice, valore)
        
        
    Visualizzazione(radice)

TEST CASE:

Input: [5, 3, 8, 1, 9, 7, 4]
Output: 1 3 4 5 7 8 9

Input: [10,9,8,7,6,5,4,3,2,1]
Output: 1 2 3 4 5 6 7 8 9 10 

Input: [7,3,5,10,2,11,34]
Output: 2 3 5 7 10 11 34
        